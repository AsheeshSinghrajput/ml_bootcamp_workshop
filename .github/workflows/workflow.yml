name: cicd 

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint Code
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .

          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .

  build-push-package:
    name: Continuous Build and Push
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build the Package
        run: docker build -t ketangangal/inference:latest .

      - name: Push the Package
        run: docker push ketangangal/inference:latest

  pull-and-start-app:
    name: Continuous Deployment
    needs: build-push-package
    runs-on: self-hosted
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Package
        run: sudo docker pull ketangangal/inference:latest

      - name: Remove Already Running Container
        run: docker ps -q --filter "name=inference" | grep -q . && docker stop ${IMAGE_NAME} && docker rm -fv ${IMAGE_NAME} || true

      - name: Docker System Prune to Remove Old Images
        run: sudo docker system prune -f

      - name: Run Docker Image to serve users
        run: |
          docker run --name=inference -p 8080:8000 ketangangal/inference:latest



